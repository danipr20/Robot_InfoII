package informatica;
import robocode.*;
import robocode.Robot;
import robocode.ScannedRobotEvent;
import static robocode.util.Utils.normalRelativeAngleDegrees;
import java.awt.Color;
import robocode.util.Utils;
import java.lang.Math;
import java.awt.*;

public class DPR20 extends AdvancedRobot {

    boolean enemiDetected = false;
    boolean posicionamiento = false;
    boolean attack = false;
    boolean enfrentarEnemigo = false;
    double myEnergy, myHeading, myGunHeading, myX, myY, gunTurnAmt, enemyBearing;
    double enemyVelocity, enemyHeading, enemyX, enemyY;
    String enemyName = "0";
    int bonusFire = 0;
    int bonusRadar = 0;
    int bonusMov = 0;

    public void run() {
        setBodyColor(Color.black);
        setRadarColor(Color.red);
        setGunColor(Color.white);
        setBulletColor(Color.red);
        setAdjustGunForRobotTurn(true);
        gunTurnAmt = 10;

        establecerEnemigo();
        int a = 1;
        takeCenter();

        while (true) {
            System.out.println("enemi:" + enemyName);
            System.out.println("fire bonus: " + bonusFire);
            establecerEnemigo();
            if (!enemiDetected) {
                spotEnemy(a, bonusRadar);
            }
            if (enemiDetected) {
                a = -a;
            }
            enemiDetected = false;
            if (getEnergy() < 40) {
                myRobotInfo();
            }
        }
    }

    public void onScannedRobot(ScannedRobotEvent e) {
        enemiDetected = true;
        enemyName = e.getName();
        enemyVelocity = e.getVelocity();
        enemyHeading = e.getHeadingRadians();
        enemyBearing = e.getBearing();

        if (enemyName.equals("sample.PaintingRobot") && !posicionamiento && !enfrentarEnemigo) {
            if (e.getDistance() > 150) {
                double absBearing = getHeadingRadians() + enemyBearing;
                double turnGunAmt = normalRelativeAngleDegrees(absBearing - getGunHeading());
                turnGunRight(turnGunAmt);
                ahead(e.getDistance() - 50);
                return;
            }

            double absBearing = getHeadingRadians() + enemyBearing;
            double turnGunAmt = normalRelativeAngleDegrees(absBearing - getGunHeading());
            turnGunRight(turnGunAmt);
            fire(3);
            if (e.getDistance() < 100) {
                if (enemyBearing > -90 && enemyBearing <= 90) {
                    back(40);
                } else {
                    ahead(40);
                }
            }
            scan();
        }

        fireI(e.getDistance());
        if (enemyName.equals("sample.PaintingRobot") && !posicionamiento && !enfrentarEnemigo) {
            turnLeft(90);
            ahead(bonusMov);
        }

        System.out.println("Energy: " + e.getEnergy());
        System.out.println("Distance: " + e.getDistance());
        System.out.println("real" + e.getName());
        System.out.println("var" + enemyName);
        System.out.println("fire bonus: " + bonusFire);
        System.out.println("vel: " + enemyVelocity);
    }

    public void onHitByBullet(HitByBulletEvent e) {
        if (!posicionamiento && !enfrentarEnemigo && !enemyName.equals("sample.PaintingRobot")) {
            turnLeft(90);
            ahead(bonusMov);
        }
    }

    public void onHitWall(HitWallEvent e) {
        takeCenter();
    }

    public void takeCenter() {
        double startheading = getHeading();
        posicionamiento = true;
        if (startheading <= 180) {
            turnLeft(startheading);
        } else {
            turnRight(360 - startheading);
        }
        ahead((getBattleFieldHeight() / 2) - getY());
        turnRight(90);
        ahead((getBattleFieldWidth() / 2) - getX());
        posicionamiento = false;
    }

    public void spotEnemy(int a, int bonusRadar) {
        int i = 10 + bonusRadar;
        i = i * a;
        turnGunRight(i);
    }

    public void myRobotInfo() {
        myEnergy = getEnergy();
        myHeading = getHeading();
        myGunHeading = getGunHeading();
        myX = getX();
        myY = getY();
    }

    public void establecerEnemigo() {
        if (enemyName.equals("sample.Corners")) {
            bonusFire = 2;
            bonusRadar = 15;
            bonusMov = 75;
        } else if (enemyName.equals("sample.Crazy")) {
            bonusFire = 0;
            bonusRadar = 25;
            bonusMov = 40;
        } else if (enemyName.equals("sample.PaintingRobot")) {
            bonusFire = 0;
            bonusRadar = 10;
            bonusMov = 0;
        } else if (!enemyName.equals("sample.PaintingRobot") && !enemyName.equals("sample.Crazy") && !enemyName.equals("sample.PaintingRobot") && !enemyName.equals("0")) {
            bonusFire = 1;
            bonusRadar = 15;
            bonusMov = 100;
        } else if (enemyName.equals("0")) {
            bonusFire = 0;
            bonusRadar = 35;
            bonusMov = 25;
        }
    }

    public void fireI(double robotDistance) {
        if (robotDistance > 300 || getEnergy() < 20) {
            fire(1 + bonusFire);
        } else if (robotDistance > 75) {
            fire(2 + bonusFire);
        } else {
            fire(3 + bonusFire);
        }
    }
}


